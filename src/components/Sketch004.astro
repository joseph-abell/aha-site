---
declare global {
    var p5: any;
}
---
<div id="sketch004" />

<script>
    class Vector {
        x: number = 0;
        y: number = 0;

        constructor( x = 0, y = 0 ) {
            this.x = x;
            this.y = y;
        }

        add( v: { x?: number, y?: number, max?: number } ) {
            this.x = this.x + ( v.x || 0 );
            this.y = this.y + ( v.y || 0 );
        }

        subtract( v: { x: number, y: number } ) {
            this.x -= v.x;
            this.y -= v.y;
        }

        multiply( n: number ) {
            this.x *= n;
            this.y *= n;
        }

        divide( n: number ) {
            this.x = this.x / n;
            this.y = this.y / n;
        }

        mag() {
            return Math.sqrt( ( this.x * this.x ) + ( this.y * this.y ) )
        }

        normalize() {
            const m = this.mag();

            if ( m != 0 ) {
                this.divide( m );
            }
        }

        limit( max: number ) {
            const mag = this.mag();
            if ( mag > max ) {
                this.normalize()
                this.multiply( max );
            }
        }
    }

    let width = 200;
  let height = 200;

  let position = new Vector( 10, 10 );
  let velocity = new Vector( 1, 0 );
  let gravity = new Vector( 0, 0.6 );
  let drag = 0.03;

  function reset() {
    position = new Vector( 10, 10 );
    velocity = new Vector( 1, 0 );
    gravity = new Vector( 0, 0.6 );
  }

  function clamp( p: any, v: any, drag: number, minX: number, maxX: number, maxY: number ) {
    if ( p.y >= maxY ) {
      p.y = maxY;
      v.y = ( -v.y ) + drag

      if ( v.x < 0 ) {
        v.x = Math.min( v.x + drag, 0 )
      }

      if ( v.x > 0 ) {
        v.x = Math.max( v.x - drag, 0 )
      }
    }

    if ( p.x > maxX ) {
      p.x = maxX;
      v.x = -velocity.x + drag;
    }

    if ( p.x < minX ) {
      p.x = minX;
      v.x = -v.x + drag;
    }
  }

    const sketch = ( p: any ) => {
      p.setup = () => {
        const canvas = p.createCanvas( width, height );
        canvas.parent( 'sketch004' );
        canvas.style( 'visibility', 'visible' );
        canvas.attribute( 'data-hidden', 'false' );

        p.background( 220 );
        p.stroke( 0 );
      };
      p.draw = () => {
        p.background( p.color( 'rgba(220, 220, 220, 0.1)' ) );
        velocity.add( gravity );
        position.add( velocity );

        clamp( position, velocity, drag, 10, 190, 190 );

        p.rect( 0, 0, velocity.mag() * 10, 2 )

        if ( velocity.x === 0 ) reset();

        p.ellipse( position.x, position.y, 20, 20, 0 )
      };
    }
    new p5( sketch, 'sketch004' );
</script>